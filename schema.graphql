type Book {
  title: String
  author: Author
}

type Author {
  name: String
  books: [Book]
}

type Rocket {
  id: ID!
  name: String
  type: String
}

type User {
  id: ID!
  email: String!
  trips: [Launch]!
  token: String
}

type Mission {
  name: String
  missionPatch(size: PatchSize): String
}

enum PatchSize {
  SMALL
  LARGE
}

type Query {
  launches: [Launch]!
  launch(id: ID!): Launch
  me: User
}


type Mutation {
  bookTrips(launchIds: [ID]!): TripUpdateResponse!
  cancelTrip(launchId: ID!): TripUpdateResponse!
  login(email: String): User
}


type TripUpdateResponse {
  success: Boolean!
  message: String
  launches: [Launch]
}




type Mutation {
  createPost(post: PostAndMediaInput): User
}

input PostAndMediaInput {
  title: String
  body: String
  mediaUrls: [String]
}
